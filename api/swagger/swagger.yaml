swagger: '2.0'
info:
  version: 0.0.1
  title: FlockIt
host: 'localhost:3000'
basePath: /
tags:
  - {name: Service, description: 'Operations regarding the creation and administration of services.'}
  - {name: User, description: 'Operations regarding the creation and administration of users.'}
  - {name: Event, description: 'Operations regarding the creation and administration of events.'}
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
definitions:
  ServicesArray: {type: array, items: {type: object, required: [_id, tx_name], properties: {_id: {type: integer, format: uint32, example: 2}, tx_cif: {type: string, example: A05732B}, fk_provider: {type: integer, format: uint32, example: 1}, tx_name: {type: string, example: 'Test service'}, fk_headquarters: {type: integer, format: uint32, example: 1}, url_main_image: {type: [string, 'null']}, url_main_video: {type: [string, 'null']}, n_rating: {type: number, format: double, example: 3.8}}}}
  FetchedService: {type: object, required: [_id, tx_name], properties: {_id: {type: integer, format: uint32, example: 2}, tx_cif: {type: string, example: A05732B}, fk_provider: {type: integer, format: uint32, example: 1}, tx_name: {type: string, example: 'Test service'}, fk_headquarters: {type: integer, format: uint32, example: 1}, url_main_image: {type: [string, 'null']}, url_main_video: {type: [string, 'null']}, n_rating: {type: number, format: double, example: 3.8}}}
  Service: {type: object, required: [tx_name], properties: {tx_cif: {type: string, example: A05732B}, fk_provider: {type: integer, format: uint32, example: 1}, tx_name: {type: string, example: 'Test service'}, fk_headquarters: {type: integer, format: uint32, example: 1}, url_main_image: {type: [string, 'null']}, url_main_video: {type: [string, 'null']}}}
  UpdateService: {type: object, required: [_id], properties: {_id: {type: integer, format: uint32, example: 2}, tx_cif: {type: string, example: A05732B}, tx_name: {type: string, example: 'Test service'}, fk_headquarters: {type: integer, format: uint32, example: 1}, url_main_image: {type: [string, 'null']}, url_main_video: {type: [string, 'null']}}}
  UpdateServiceDescription: {type: object, required: [fk_agency_service, tx_description], properties: {fk_agency_service: {type: integer, format: uint32, example: 1}, tx_description: {type: string, example: 'This is a description'}}}
  UsersArray: {type: array, items: {type: object, required: [tx_email, tx_name, dt_birthday], properties: {tx_email: {type: string, example: rubenlopezlozoya12@gmail.com}, tx_name: {type: string, example: Ruben}, url_profile_image: {type: [string, 'null'], example: /good_url.img}, tx_bio: {type: [string, 'null'], example: 'Test bio'}, tx_gender: {type: [string, 'null'], example: M}, fk_place: {type: [integer], format: uint32, example: 1}, tx_phone: {type: [string, 'null'], example: '612613987'}, dt_birthday: {type: string, format: date-time, example: '1993-04-08T22:00:00.000Z'}, is_admin: {type: integer, format: uint32}, n_rating: {type: number, format: double, example: 3.2}}}}
  FetchedUser: {type: object, required: [tx_email, tx_name, dt_birthday], properties: {tx_email: {type: string, example: rubenlopezlozoya12@gmail.com}, tx_name: {type: string, example: Ruben}, url_profile_image: {type: [string, 'null'], example: /good_url.img}, tx_bio: {type: [string, 'null'], example: 'Test bio'}, tx_gender: {type: [string, 'null'], example: M}, fk_place: {type: [integer], format: uint32, example: 1}, tx_phone: {type: [string, 'null'], example: '612613987'}, dt_birthday: {type: string, format: date-time, example: '1993-04-08T22:00:00.000Z'}, is_admin: {type: integer, format: uint32}, n_rating: {type: number, format: double, example: 3.2}}}
  RegisterUserObject: {type: object, required: [tx_name, tx_email, tx_password, dt_birthday], properties: {tx_email: {type: string, example: rubenlopezlozoya12@gmail.com}, tx_name: {type: string, example: Ruben}, tx_password: {type: string, example: Ruben1234}, tx_gender: {type: string, example: M, enum: [M, F, m, f]}, dt_birthday: {type: string, format: dateTime, example: '1993-04-08T22:00:00.000Z'}, fk_place: {type: integer, format: uint32, example: 1}}}
  UpdateUserObject: {type: object, required: [_id], additionalProperties: false, properties: {_id: {type: integer, format: uint32}, tx_name: {type: string, example: Ruben}, tx_gender: {type: [string, 'null'], example: M, enum: [M, F, m, f]}, dt_birthday: {type: string, format: dateTime, example: '1993-04-08T22:00:00.000Z'}, fk_place: {type: [integer, 'null'], format: uint32, example: 1}, tx_bio: {type: [string, 'null'], example: 'This is a bio'}, url_profile_image: {type: [string, 'null'], example: 'This is a bio'}, tx_phone: {type: [string, 'null'], example: '616436819'}}}
  CreateServiceResponse: {type: object, required: [serviceId], properties: {serviceId: {type: integer, format: uint32}}}
  Error: {required: [message], properties: {message: {type: string}}}
  LoginForm: {type: object, required: [tx_email, tx_password], properties: {tx_email: {type: string, example: rubenlopezlozoya12@gmail.com}, tx_password: {type: string, example: Ruben1234}}}
  LoginResponse: {type: object, required: [token], properties: {token: {type: string}}}
  UpdateResponse: {type: object, properties: {fieldCount: {type: integer, format: uint32}, affectedRows: {type: integer, format: uint32}, insertId: {type: integer, format: uint32}, serverStatus: {type: integer, format: uint32}, warningCount: {type: integer, format: uint32}, message: {type: string}, protocol41: {type: boolean}, changedRows: {type: integer, format: uint32}}}
  Event: {type: object, required: [tx_title, fk_place], additionalProperties: false, properties: {tx_title: {type: string, example: 'Holirun in Boadilla'}, tx_short_description: {type: [string, 'null'], example: 'Come and run in Boadilla!'}, fk_place: {type: integer, format: uint32, example: 1}, n_seating: {type: [integer, 'null'], format: uint32, example: 50}, url_main_image: {type: [string, 'null'], example: url-image.com/main}, url_main_video: {type: [string, 'null'], example: url-video.com/main}, dt_start_funding: {type: [string, 'null'], format: date-time, example: '2017-07-07T17:17:00.000Z'}, dt_end_funding: {type: [string, 'null'], format: date-time, example: '2017-07-07T17:17:00.000Z'}, dt_event_start_time: {type: [string, 'null'], format: date-time, example: '2017-07-07T17:17:00.000Z'}, dt_event_end_time: {type: [string, 'null'], format: date-time, example: '2017-07-07T17:17:00.000Z'}, n_current_funding: {type: [integer, 'null'], format: uint32, example: 0}, n_target_funding: {type: [integer, 'null'], format: uint32, example: 50000}}}
securityDefinitions:
  Authorization: {description: 'Authentication token for restricted operations', type: apiKey, name: Authorization, in: header}
paths:
  /service: {x-swagger-router-controller: service, post: {tags: [Service], description: 'Creates a service', operationId: createService, security: [{Authorization: []}], parameters: [{in: body, name: body, description: 'Service object that needs to be added to the database', required: true, schema: {type: object, required: [tx_name], properties: {tx_cif: {type: string, example: A05732B}, fk_provider: {type: integer, format: uint32, example: 1}, tx_name: {type: string, example: 'Test service'}, fk_headquarters: {type: integer, format: uint32, example: 1}, url_main_image: {type: [string, 'null']}, url_main_video: {type: [string, 'null']}}}}], responses: {'200': {description: Success, schema: {type: object, required: [serviceId], properties: {serviceId: {type: integer, format: uint32}}}}, '500': {description: Error, schema: {required: [message], properties: {message: {type: string}}}}}}}
  /service/update: {x-swagger-router-controller: service, put: {tags: [Service], description: 'Updates a service', operationId: updateService, security: [{Authorization: []}], parameters: [{in: body, name: body, description: 'Updates the service passed in the body', required: true, schema: {type: object, required: [_id], properties: {_id: {type: integer, format: uint32, example: 2}, tx_cif: {type: string, example: A05732B}, tx_name: {type: string, example: 'Test service'}, fk_headquarters: {type: integer, format: uint32, example: 1}, url_main_image: {type: [string, 'null']}, url_main_video: {type: [string, 'null']}}}}], responses: {'200': {description: Success, schema: {type: object, properties: {fieldCount: {type: integer, format: uint32}, affectedRows: {type: integer, format: uint32}, insertId: {type: integer, format: uint32}, serverStatus: {type: integer, format: uint32}, warningCount: {type: integer, format: uint32}, message: {type: string}, protocol41: {type: boolean}, changedRows: {type: integer, format: uint32}}}}, '404': {description: 'Service not found', schema: {required: [message], properties: {message: {type: string}}}}, '500': {description: Error, schema: {required: [message], properties: {message: {type: string}}}}}}}
  /service/description: {x-swagger-router-controller: service, put: {tags: [Service], description: 'Updates the description of a service', operationId: updateServiceDescription, security: [{Authorization: []}], parameters: [{in: body, name: body, description: 'Updates the description of service passed in the body', required: true, schema: {type: object, required: [fk_agency_service, tx_description], properties: {fk_agency_service: {type: integer, format: uint32, example: 1}, tx_description: {type: string, example: 'This is a description'}}}}], responses: {'200': {description: Success, schema: {type: object, properties: {fieldCount: {type: integer, format: uint32}, affectedRows: {type: integer, format: uint32}, insertId: {type: integer, format: uint32}, serverStatus: {type: integer, format: uint32}, warningCount: {type: integer, format: uint32}, message: {type: string}, protocol41: {type: boolean}, changedRows: {type: integer, format: uint32}}}}, '404': {description: 'Service not found', schema: {required: [message], properties: {message: {type: string}}}}, '500': {description: Error, schema: {required: [message], properties: {message: {type: string}}}}}}}
  '/service/findByProvider/{providerId}': {x-swagger-router-controller: service, get: {tags: [Service], parameters: [{name: providerId, in: path, required: true, type: integer, format: uint32}], description: 'Retrieves an array of services offered by an active provider', operationId: findServiceByProvider, responses: {'200': {description: Success, schema: {type: array, items: {type: object, required: [_id, tx_name], properties: {_id: {type: integer, format: uint32, example: 2}, tx_cif: {type: string, example: A05732B}, fk_provider: {type: integer, format: uint32, example: 1}, tx_name: {type: string, example: 'Test service'}, fk_headquarters: {type: integer, format: uint32, example: 1}, url_main_image: {type: [string, 'null']}, url_main_video: {type: [string, 'null']}, n_rating: {type: number, format: double, example: 3.8}}}}}, '404': {description: 'Service not found', schema: {required: [message], properties: {message: {type: string}}}}, '500': {description: Error, schema: {required: [message], properties: {message: {type: string}}}}}}}
  '/user/{userId}': {x-swagger-router-controller: user, get: {tags: [User], parameters: [{name: userId, in: path, required: true, type: integer, format: uint32}], description: 'Retrieves a user', operationId: findUserById, responses: {'200': {description: Success, schema: {type: object, required: [tx_email, tx_name, dt_birthday], properties: {tx_email: {type: string, example: rubenlopezlozoya12@gmail.com}, tx_name: {type: string, example: Ruben}, url_profile_image: {type: [string, 'null'], example: /good_url.img}, tx_bio: {type: [string, 'null'], example: 'Test bio'}, tx_gender: {type: [string, 'null'], example: M}, fk_place: {type: [integer], format: uint32, example: 1}, tx_phone: {type: [string, 'null'], example: '612613987'}, dt_birthday: {type: string, format: date-time, example: '1993-04-08T22:00:00.000Z'}, is_admin: {type: integer, format: uint32}, n_rating: {type: number, format: double, example: 3.2}}}}, '404': {description: 'User not found', schema: {required: [message], properties: {message: {type: string}}}}, '500': {description: Error, schema: {required: [message], properties: {message: {type: string}}}}}}}
  /user: {x-swagger-router-controller: user, post: {tags: [User], description: 'Register a user and send a verification email', operationId: createUser, parameters: [{in: body, name: body, description: 'User object to be registered in the database', required: true, schema: {type: object, required: [tx_name, tx_email, tx_password, dt_birthday], properties: {tx_email: {type: string, example: rubenlopezlozoya12@gmail.com}, tx_name: {type: string, example: Ruben}, tx_password: {type: string, example: Ruben1234}, tx_gender: {type: string, example: M, enum: [M, F, m, f]}, dt_birthday: {type: string, format: dateTime, example: '1993-04-08T22:00:00.000Z'}, fk_place: {type: integer, format: uint32, example: 1}}}}], responses: {'200': {description: Success, schema: {type: object, required: [token], properties: {token: {type: string}}}}, '409': {description: 'Email already exists', schema: {required: [message], properties: {message: {type: string}}}}, '500': {description: Error, schema: {required: [message], properties: {message: {type: string}}}}}}, put: {tags: [User], parameters: [{in: body, name: body, description: 'Updates an active user', required: true, schema: {type: object, required: [_id], additionalProperties: false, properties: {_id: {type: integer, format: uint32}, tx_name: {type: string, example: Ruben}, tx_gender: {type: [string, 'null'], example: M, enum: [M, F, m, f]}, dt_birthday: {type: string, format: dateTime, example: '1993-04-08T22:00:00.000Z'}, fk_place: {type: [integer, 'null'], format: uint32, example: 1}, tx_bio: {type: [string, 'null'], example: 'This is a bio'}, url_profile_image: {type: [string, 'null'], example: 'This is a bio'}, tx_phone: {type: [string, 'null'], example: '616436819'}}}}], description: 'Updates a user', operationId: updateUser, security: [{Authorization: []}], responses: {'200': {description: Success, schema: {type: object, properties: {fieldCount: {type: integer, format: uint32}, affectedRows: {type: integer, format: uint32}, insertId: {type: integer, format: uint32}, serverStatus: {type: integer, format: uint32}, warningCount: {type: integer, format: uint32}, message: {type: string}, protocol41: {type: boolean}, changedRows: {type: integer, format: uint32}}}}, '404': {description: 'User not found', schema: {required: [message], properties: {message: {type: string}}}}, '500': {description: Error, schema: {required: [message], properties: {message: {type: string}}}}}}, delete: {tags: [User], description: 'Deletes a user setting property is_active to 0', operationId: deleteUser, security: [{Authorization: []}], responses: {'200': {description: Success, schema: {type: object, properties: {fieldCount: {type: integer, format: uint32}, affectedRows: {type: integer, format: uint32}, insertId: {type: integer, format: uint32}, serverStatus: {type: integer, format: uint32}, warningCount: {type: integer, format: uint32}, message: {type: string}, protocol41: {type: boolean}, changedRows: {type: integer, format: uint32}}}}, '404': {description: 'User not found', schema: {required: [message], properties: {message: {type: string}}}}, '500': {description: Error, schema: {required: [message], properties: {message: {type: string}}}}}}}
  /user/password/reset: {x-swagger-router-controller: user, post: {tags: [User], description: 'Initiates the process to reset the user password. It sends a Reset link with the token to the email passed in the body', operationId: resetUserPassword, parameters: [{in: body, name: body, description: 'Object containing the email where the Reset link will be sent', required: true, schema: {type: object, required: [tx_email], additionalProperties: false, properties: {tx_email: {type: string, example: example@domain.com}}}}], responses: {'200': {description: Success, schema: {type: object, required: [token], properties: {token: {type: string}}}}, '404': {description: 'Email does not exist', schema: {required: [message], properties: {message: {type: string}}}}, '500': {description: Error, schema: {required: [message], properties: {message: {type: string}}}}}}}
  /user/password/change: {x-swagger-router-controller: user, post: {tags: [User], description: 'Changes the user password to the one provided in the body of the post', operationId: changeUserPassword, security: [{Authorization: []}], parameters: [{in: body, name: body, description: 'New password', required: true, schema: {type: object, required: [tx_password], additionalProperties: false, properties: {tx_password: {type: string, example: password1234}}}}], responses: {'200': {description: Success, schema: {type: object, properties: {fieldCount: {type: integer, format: uint32}, affectedRows: {type: integer, format: uint32}, insertId: {type: integer, format: uint32}, serverStatus: {type: integer, format: uint32}, warningCount: {type: integer, format: uint32}, message: {type: string}, protocol41: {type: boolean}, changedRows: {type: integer, format: uint32}}}}, '404': {description: 'User does not exist', schema: {required: [message], properties: {message: {type: string}}}}, '500': {description: Error, schema: {required: [message], properties: {message: {type: string}}}}}}}
  /auth/login: {x-swagger-router-controller: authentication, post: {tags: [Authentication], description: 'Logs in a registered user', operationId: login, parameters: [{in: body, name: body, description: 'Credentials of a registered user (email & password)', required: true, schema: {type: object, required: [tx_email, tx_password], properties: {tx_email: {type: string, example: rubenlopezlozoya12@gmail.com}, tx_password: {type: string, example: Ruben1234}}}}], responses: {'200': {description: Success, schema: {type: object, required: [token], properties: {token: {type: string}}}}, '404': {description: 'User not found', schema: {required: [message], properties: {message: {type: string}}}}, '500': {description: Error, schema: {required: [message], properties: {message: {type: string}}}}}}}
  '/auth/activate/{activateToken}': {x-swagger-router-controller: authentication, get: {tags: [Authentication], parameters: [{name: activateToken, in: path, required: true, type: string}], description: 'Activates the user within the token passed in the path', operationId: activateUser, responses: {'200': {description: Success, schema: {type: object, required: [token], properties: {token: {type: string}}}}, '404': {description: 'User not found', schema: {required: [message], properties: {message: {type: string}}}}, '500': {description: Error, schema: {required: [message], properties: {message: {type: string}}}}}}}
  /event: {x-swagger-router-controller: event, post: {tags: [Event], description: 'Creates an event', operationId: createEvent, security: [{Authorization: []}], parameters: [{in: body, name: body, description: 'Event object that needs to be added to the database', required: true, schema: {type: object, required: [tx_title, fk_place], additionalProperties: false, properties: {tx_title: {type: string, example: 'Holirun in Boadilla'}, tx_short_description: {type: [string, 'null'], example: 'Come and run in Boadilla!'}, fk_place: {type: integer, format: uint32, example: 1}, n_seating: {type: [integer, 'null'], format: uint32, example: 50}, url_main_image: {type: [string, 'null'], example: url-image.com/main}, url_main_video: {type: [string, 'null'], example: url-video.com/main}, dt_start_funding: {type: [string, 'null'], format: date-time, example: '2017-07-07T17:17:00.000Z'}, dt_end_funding: {type: [string, 'null'], format: date-time, example: '2017-07-07T17:17:00.000Z'}, dt_event_start_time: {type: [string, 'null'], format: date-time, example: '2017-07-07T17:17:00.000Z'}, dt_event_end_time: {type: [string, 'null'], format: date-time, example: '2017-07-07T17:17:00.000Z'}, n_current_funding: {type: [integer, 'null'], format: uint32, example: 0}, n_target_funding: {type: [integer, 'null'], format: uint32, example: 50000}}}}], responses: {'200': {description: Success, schema: {type: object, required: [eventId], properties: {eventId: {type: integer, format: uint32}}}}, '500': {description: Error, schema: {required: [message], properties: {message: {type: string}}}}}}}
  /event/update: {x-swagger-router-controller: event, put: {tags: [Event], description: 'Updates a event', operationId: updateEvent, security: [{Authorization: []}], parameters: [{in: body, name: body, description: 'Updates the event passed in the body', required: true, schema: {type: object, required: [_id], additionalProperties: false, properties: {_id: {type: integer, format: uint32, example: 2}, tx_title: {type: string, example: 'Holirun in Boadilla'}, tx_short_description: {type: [string, 'null'], example: 'Come and run in Boadilla!'}, fk_place: {type: integer, format: uint32, example: 1}, n_seating: {type: [integer, 'null'], format: uint32, example: 50}, url_main_image: {type: [string, 'null'], example: url-image.com/main}, url_main_video: {type: [string, 'null'], example: url-video.com/main}, dt_start_funding: {type: [string, 'null'], format: date-time, example: '2017-07-07T17:17:00.000Z'}, dt_end_funding: {type: [string, 'null'], format: date-time, example: '2017-07-07T17:17:00.000Z'}, dt_event_start_time: {type: [string, 'null'], format: date-time, example: '2017-07-07T17:17:00.000Z'}, dt_event_end_time: {type: [string, 'null'], format: date-time, example: '2017-07-07T17:17:00.000Z'}, n_current_funding: {type: [integer, 'null'], format: uint32, example: 0}, n_target_funding: {type: [integer, 'null'], format: uint32, example: 50000}}}}], responses: {'200': {description: Success, schema: {type: object, properties: {fieldCount: {type: integer, format: uint32}, affectedRows: {type: integer, format: uint32}, insertId: {type: integer, format: uint32}, serverStatus: {type: integer, format: uint32}, warningCount: {type: integer, format: uint32}, message: {type: string}, protocol41: {type: boolean}, changedRows: {type: integer, format: uint32}}}}, '404': {description: 'Event not found', schema: {required: [message], properties: {message: {type: string}}}}, '500': {description: Error, schema: {required: [message], properties: {message: {type: string}}}}}}}
  /event/description: {x-swagger-router-controller: event, put: {tags: [Event], description: 'Updates the description of a event', operationId: updateEventDescription, security: [{Authorization: []}], parameters: [{in: body, name: body, description: 'Updates the description of event passed in the body', required: true, schema: {type: object, required: [fk_event, tx_description], additionalProperties: false, properties: {fk_event: {type: integer, format: uint32, example: 1}, tx_description: {type: string, example: 'This is a description'}}}}], responses: {'200': {description: Success, schema: {type: object, properties: {fieldCount: {type: integer, format: uint32}, affectedRows: {type: integer, format: uint32}, insertId: {type: integer, format: uint32}, serverStatus: {type: integer, format: uint32}, warningCount: {type: integer, format: uint32}, message: {type: string}, protocol41: {type: boolean}, changedRows: {type: integer, format: uint32}}}}, '404': {description: 'Event not found', schema: {required: [message], properties: {message: {type: string}}}}, '500': {description: Error, schema: {required: [message], properties: {message: {type: string}}}}}}}
  /swagger: {x-swagger-pipe: swagger_raw}
